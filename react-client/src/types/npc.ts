// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

// @ts-ignore
import { __SPACETIMEDB__, AlgebraicType, ProductType, BuiltinType, ProductTypeElement, SumType, SumTypeVariant, IDatabaseTable, AlgebraicValue, ReducerEvent, Identity } from "@clockworklabs/spacetimedb-sdk";

export class Npc extends IDatabaseTable
{
	public static tableName = "Npc";
	public spawnableEntityId: number;

	public static primaryKey: string | undefined = "spawnableEntityId";

	constructor(spawnableEntityId: number) {
	super();
		this.spawnableEntityId = spawnableEntityId;
	}

	public static serialize(value: Npc): object {
		return [
		value.spawnableEntityId
		];
	}

	public static getAlgebraicType(): AlgebraicType
	{
		return AlgebraicType.createProductType([
			new ProductTypeElement("spawnable_entity_id", AlgebraicType.createPrimitiveType(BuiltinType.Type.U64)),
		]);
	}

	public static fromValue(value: AlgebraicValue): Npc
	{
		let productValue = value.asProductValue();
		let __spawnable_entity_id = productValue.elements[0].asNumber();
		return new this(__spawnable_entity_id);
	}

	public static count(): number
	{
		return __SPACETIMEDB__.clientDB.getTable("Npc").count();
	}

	public static all(): Npc[]
	{
		return __SPACETIMEDB__.clientDB.getTable("Npc").getInstances() as unknown as Npc[];
	}

	public static filterBySpawnableEntityId(value: number): Npc | null
	{
		for(let instance of __SPACETIMEDB__.clientDB.getTable("Npc").getInstances())
		{
			if (instance.spawnableEntityId === value) {
				return instance;
			}
		}
		return null;
	}


	public static onInsert(callback: (value: Npc, reducerEvent: ReducerEvent | undefined) => void)
	{
		__SPACETIMEDB__.clientDB.getTable("Npc").onInsert(callback);
	}

	public static onUpdate(callback: (oldValue: Npc, newValue: Npc, reducerEvent: ReducerEvent | undefined) => void)
	{
		__SPACETIMEDB__.clientDB.getTable("Npc").onUpdate(callback);
	}

	public static onDelete(callback: (value: Npc, reducerEvent: ReducerEvent | undefined) => void)
	{
		__SPACETIMEDB__.clientDB.getTable("Npc").onDelete(callback);
	}

	public static removeOnInsert(callback: (value: Npc, reducerEvent: ReducerEvent | undefined) => void)
	{
		__SPACETIMEDB__.clientDB.getTable("Npc").removeOnInsert(callback);
	}

	public static removeOnUpdate(callback: (oldValue: Npc, newValue: Npc, reducerEvent: ReducerEvent | undefined) => void)
	{
		__SPACETIMEDB__.clientDB.getTable("Npc").removeOnUpdate(callback);
	}

	public static removeOnDelete(callback: (value: Npc, reducerEvent: ReducerEvent | undefined) => void)
	{
		__SPACETIMEDB__.clientDB.getTable("Npc").removeOnDelete(callback);
	}

}

export default Npc;

__SPACETIMEDB__.registerComponent("Npc", Npc);

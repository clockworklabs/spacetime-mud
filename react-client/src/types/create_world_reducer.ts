// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

// @ts-ignore
import { __SPACETIMEDB__, AlgebraicType, ProductType, BuiltinType, ProductTypeElement, IDatabaseTable, AlgebraicValue, ReducerArgsAdapter, SumTypeVariant, Serializer, Identity, ReducerEvent } from "@clockworklabs/spacetimedb-sdk";

export class CreateWorldReducer
{
	public static call(_worldId: string, _worldName: string, _worldDescription: string)
	{
		if (__SPACETIMEDB__.spacetimeDBClient) {
		const serializer = __SPACETIMEDB__.spacetimeDBClient.getSerializer();
		let _worldIdType = AlgebraicType.createPrimitiveType(BuiltinType.Type.String);
		serializer.write(_worldIdType, _worldId);
		let _worldNameType = AlgebraicType.createPrimitiveType(BuiltinType.Type.String);
		serializer.write(_worldNameType, _worldName);
		let _worldDescriptionType = AlgebraicType.createPrimitiveType(BuiltinType.Type.String);
		serializer.write(_worldDescriptionType, _worldDescription);
			__SPACETIMEDB__.spacetimeDBClient.call("create_world", serializer);
		}
	}

	public static deserializeArgs(adapter: ReducerArgsAdapter): any[] {
		let worldIdType = AlgebraicType.createPrimitiveType(BuiltinType.Type.String);
		let worldIdValue = AlgebraicValue.deserialize(worldIdType, adapter.next())
		let worldId = worldIdValue.asString();
		let worldNameType = AlgebraicType.createPrimitiveType(BuiltinType.Type.String);
		let worldNameValue = AlgebraicValue.deserialize(worldNameType, adapter.next())
		let worldName = worldNameValue.asString();
		let worldDescriptionType = AlgebraicType.createPrimitiveType(BuiltinType.Type.String);
		let worldDescriptionValue = AlgebraicValue.deserialize(worldDescriptionType, adapter.next())
		let worldDescription = worldDescriptionValue.asString();
		return [worldId, worldName, worldDescription];
	}

	public static on(callback: (reducerEvent: ReducerEvent, reducerArgs: any[]) => void)
	{
		if (__SPACETIMEDB__.spacetimeDBClient) {
			__SPACETIMEDB__.spacetimeDBClient.on("reducer:CreateWorld", callback);
		}
	}
}

__SPACETIMEDB__.reducers.set("CreateWorld", CreateWorldReducer);
if (__SPACETIMEDB__.spacetimeDBClient) {
	__SPACETIMEDB__.spacetimeDBClient.registerReducer("CreateWorld", CreateWorldReducer);
}

export default CreateWorldReducer

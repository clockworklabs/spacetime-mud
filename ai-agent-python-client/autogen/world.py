# THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
# WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

from __future__ import annotations
from typing import List, Iterator, Callable

from spacetimedb_sdk.spacetimedb_client import SpacetimeDBClient, Identity
from spacetimedb_sdk.spacetimedb_client import ReducerEvent

class World:
	is_table_class = True

	primary_key = "world_id"

	@classmethod
	def register_row_update(cls, callback: Callable[[str,World,World,ReducerEvent], None]):
		SpacetimeDBClient.instance._register_row_update("World",callback)

	@classmethod
	def iter(cls) -> Iterator[World]:
		return SpacetimeDBClient.instance._get_table_cache("World").values()

	@classmethod
	def filter_by_world_id(cls, world_id) -> World:
		return next(iter([column_value for column_value in SpacetimeDBClient.instance._get_table_cache("World").values() if column_value.world_id == world_id]), None)

	@classmethod
	def filter_by_name(cls, name) -> List[World]:
		return [column_value for column_value in SpacetimeDBClient.instance._get_table_cache("World").values() if column_value.name == name]

	@classmethod
	def filter_by_description(cls, description) -> List[World]:
		return [column_value for column_value in SpacetimeDBClient.instance._get_table_cache("World").values() if column_value.description == description]

	def __init__(self, data: List[object]):
		self.data = {}
		self.data["world_id"] = str(data[0])
		self.data["name"] = str(data[1])
		self.data["description"] = str(data[2])

	def encode(self) -> List[object]:
		return [self.world_id, self.name, self.description]

	def __getattr__(self, name: str):
		return self.data.get(name)
